package {{NamespaceValue}};

import com.fasterxml.jackson.annotation.JsonProperty;
import com.kbalazsworks.stackjudge_aws_sdk.common.interfaces.IOpenSdkPostable;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.extern.jackson.Jacksonized;
import org.springframework.core.io.ByteArrayResource;
import org.springframework.http.HttpEntity;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

import javax.annotation.processing.Generated;
import java.util.List;

@Generated("OpenSDK: https://github.com/balazskrizsan/OpenSdk")
@Jacksonized
@Builder(access = AccessLevel.PUBLIC)
@AllArgsConstructor
@Getter
public final class {{ ValueObjectName -}}
{%- if Implementation != "" -%}
 implements {{ Implementation -}}
{%- endif %}
{
    {%- for parameter in Parameters -%}
    {%- if parameter.Value.JsonPropertyValue != null -%}
    @JsonProperty("{{ parameter.Value.JsonPropertyValue }}")
    {%- endif -%}
    private final {{ parameter.Key }} {{ parameter.Value.Value }};
    {%- endfor -%}
    {%- if Implementation != "" -%}

    @Override
    public MultiValueMap<String, Object> toOpenSdkPost()
    {
        return new LinkedMultiValueMap<>()
        {{ "{{" }}
        {%- for parameter in parameters -%}
            addAll("{{ parameter.Value.Value }}", List.of({{ parameter.Value.Value }}));
        {%- endfor -%}
        {{ "}}" }};
    }
    {%- endif -%}
}
